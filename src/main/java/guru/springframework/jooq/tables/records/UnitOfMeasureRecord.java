/*
 * This file is generated by jOOQ.
 */
package guru.springframework.jooq.tables.records;


import guru.springframework.jooq.tables.UnitOfMeasure;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UnitOfMeasureRecord extends UpdatableRecordImpl<UnitOfMeasureRecord> implements Record2<Long, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>UNIT_OF_MEASURE.ID</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>UNIT_OF_MEASURE.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>UNIT_OF_MEASURE.DESCRIPTION</code>.
     */
    public void setDescription(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>UNIT_OF_MEASURE.DESCRIPTION</code>.
     */
    public String getDescription() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Long, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return UnitOfMeasure.UNIT_OF_MEASURE.ID;
    }

    @Override
    public Field<String> field2() {
        return UnitOfMeasure.UNIT_OF_MEASURE.DESCRIPTION;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getDescription();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getDescription();
    }

    @Override
    public UnitOfMeasureRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public UnitOfMeasureRecord value2(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public UnitOfMeasureRecord values(Long value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UnitOfMeasureRecord
     */
    public UnitOfMeasureRecord() {
        super(UnitOfMeasure.UNIT_OF_MEASURE);
    }

    /**
     * Create a detached, initialised UnitOfMeasureRecord
     */
    public UnitOfMeasureRecord(Long id, String description) {
        super(UnitOfMeasure.UNIT_OF_MEASURE);

        setId(id);
        setDescription(description);
    }
}
