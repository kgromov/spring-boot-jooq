/*
 * This file is generated by jOOQ.
 */
package guru.springframework.jooq.tables.records;


import guru.springframework.jooq.tables.Ingredient;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IngredientRecord extends UpdatableRecordImpl<IngredientRecord> implements Record5<Long, BigDecimal, String, Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>INGREDIENT.ID</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>INGREDIENT.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>INGREDIENT.AMOUNT</code>.
     */
    public void setAmount(BigDecimal value) {
        set(1, value);
    }

    /**
     * Getter for <code>INGREDIENT.AMOUNT</code>.
     */
    public BigDecimal getAmount() {
        return (BigDecimal) get(1);
    }

    /**
     * Setter for <code>INGREDIENT.DESCRIPTION</code>.
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>INGREDIENT.DESCRIPTION</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>INGREDIENT.RECIPE_ID</code>.
     */
    public void setRecipeId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>INGREDIENT.RECIPE_ID</code>.
     */
    public Long getRecipeId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>INGREDIENT.UOM_ID</code>.
     */
    public void setUomId(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>INGREDIENT.UOM_ID</code>.
     */
    public Long getUomId() {
        return (Long) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, BigDecimal, String, Long, Long> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, BigDecimal, String, Long, Long> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Ingredient.INGREDIENT.ID;
    }

    @Override
    public Field<BigDecimal> field2() {
        return Ingredient.INGREDIENT.AMOUNT;
    }

    @Override
    public Field<String> field3() {
        return Ingredient.INGREDIENT.DESCRIPTION;
    }

    @Override
    public Field<Long> field4() {
        return Ingredient.INGREDIENT.RECIPE_ID;
    }

    @Override
    public Field<Long> field5() {
        return Ingredient.INGREDIENT.UOM_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public BigDecimal component2() {
        return getAmount();
    }

    @Override
    public String component3() {
        return getDescription();
    }

    @Override
    public Long component4() {
        return getRecipeId();
    }

    @Override
    public Long component5() {
        return getUomId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public BigDecimal value2() {
        return getAmount();
    }

    @Override
    public String value3() {
        return getDescription();
    }

    @Override
    public Long value4() {
        return getRecipeId();
    }

    @Override
    public Long value5() {
        return getUomId();
    }

    @Override
    public IngredientRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public IngredientRecord value2(BigDecimal value) {
        setAmount(value);
        return this;
    }

    @Override
    public IngredientRecord value3(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public IngredientRecord value4(Long value) {
        setRecipeId(value);
        return this;
    }

    @Override
    public IngredientRecord value5(Long value) {
        setUomId(value);
        return this;
    }

    @Override
    public IngredientRecord values(Long value1, BigDecimal value2, String value3, Long value4, Long value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached IngredientRecord
     */
    public IngredientRecord() {
        super(Ingredient.INGREDIENT);
    }

    /**
     * Create a detached, initialised IngredientRecord
     */
    public IngredientRecord(Long id, BigDecimal amount, String description, Long recipeId, Long uomId) {
        super(Ingredient.INGREDIENT);

        setId(id);
        setAmount(amount);
        setDescription(description);
        setRecipeId(recipeId);
        setUomId(uomId);
    }
}
