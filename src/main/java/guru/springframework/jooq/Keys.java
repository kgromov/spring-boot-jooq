/*
 * This file is generated by jOOQ.
 */
package guru.springframework.jooq;


import guru.springframework.jooq.tables.Category;
import guru.springframework.jooq.tables.Ingredient;
import guru.springframework.jooq.tables.Notes;
import guru.springframework.jooq.tables.Recipe;
import guru.springframework.jooq.tables.RecipeCategory;
import guru.springframework.jooq.tables.UnitOfMeasure;
import guru.springframework.jooq.tables.records.CategoryRecord;
import guru.springframework.jooq.tables.records.IngredientRecord;
import guru.springframework.jooq.tables.records.NotesRecord;
import guru.springframework.jooq.tables.records.RecipeCategoryRecord;
import guru.springframework.jooq.tables.records.RecipeRecord;
import guru.springframework.jooq.tables.records.UnitOfMeasureRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in 
 * the default schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CategoryRecord> CONSTRAINT_3 = Internal.createUniqueKey(Category.CATEGORY, DSL.name("CONSTRAINT_3"), new TableField[] { Category.CATEGORY.ID }, true);
    public static final UniqueKey<IngredientRecord> CONSTRAINT_1 = Internal.createUniqueKey(Ingredient.INGREDIENT, DSL.name("CONSTRAINT_1"), new TableField[] { Ingredient.INGREDIENT.ID }, true);
    public static final UniqueKey<NotesRecord> CONSTRAINT_4 = Internal.createUniqueKey(Notes.NOTES, DSL.name("CONSTRAINT_4"), new TableField[] { Notes.NOTES.ID }, true);
    public static final UniqueKey<RecipeRecord> CONSTRAINT_8 = Internal.createUniqueKey(Recipe.RECIPE, DSL.name("CONSTRAINT_8"), new TableField[] { Recipe.RECIPE.ID }, true);
    public static final UniqueKey<RecipeCategoryRecord> CONSTRAINT_D = Internal.createUniqueKey(RecipeCategory.RECIPE_CATEGORY, DSL.name("CONSTRAINT_D"), new TableField[] { RecipeCategory.RECIPE_CATEGORY.RECIPE_ID, RecipeCategory.RECIPE_CATEGORY.CATEGORY_ID }, true);
    public static final UniqueKey<UnitOfMeasureRecord> CONSTRAINT_4E = Internal.createUniqueKey(UnitOfMeasure.UNIT_OF_MEASURE, DSL.name("CONSTRAINT_4E"), new TableField[] { UnitOfMeasure.UNIT_OF_MEASURE.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<IngredientRecord, UnitOfMeasureRecord> FK6IV5L89QMITEDN5M2A71KTA2T = Internal.createForeignKey(Ingredient.INGREDIENT, DSL.name("FK6IV5L89QMITEDN5M2A71KTA2T"), new TableField[] { Ingredient.INGREDIENT.UOM_ID }, Keys.CONSTRAINT_4E, new TableField[] { UnitOfMeasure.UNIT_OF_MEASURE.ID }, true);
    public static final ForeignKey<IngredientRecord, RecipeRecord> FKJ0S4YWMQQQW4H5IOMMIGH5YJA = Internal.createForeignKey(Ingredient.INGREDIENT, DSL.name("FKJ0S4YWMQQQW4H5IOMMIGH5YJA"), new TableField[] { Ingredient.INGREDIENT.RECIPE_ID }, Keys.CONSTRAINT_8, new TableField[] { Recipe.RECIPE.ID }, true);
    public static final ForeignKey<RecipeRecord, NotesRecord> FK37AL6KCBDASGFNUT9XOKKTIE9 = Internal.createForeignKey(Recipe.RECIPE, DSL.name("FK37AL6KCBDASGFNUT9XOKKTIE9"), new TableField[] { Recipe.RECIPE.NOTES_ID }, Keys.CONSTRAINT_4, new TableField[] { Notes.NOTES.ID }, true);
    public static final ForeignKey<RecipeCategoryRecord, RecipeRecord> FKCQLQNVFYARHIEEWFEAYK3V25V = Internal.createForeignKey(RecipeCategory.RECIPE_CATEGORY, DSL.name("FKCQLQNVFYARHIEEWFEAYK3V25V"), new TableField[] { RecipeCategory.RECIPE_CATEGORY.RECIPE_ID }, Keys.CONSTRAINT_8, new TableField[] { Recipe.RECIPE.ID }, true);
    public static final ForeignKey<RecipeCategoryRecord, CategoryRecord> FKQSI87I8D4QQDEHLV2EIWVPWB = Internal.createForeignKey(RecipeCategory.RECIPE_CATEGORY, DSL.name("FKQSI87I8D4QQDEHLV2EIWVPWB"), new TableField[] { RecipeCategory.RECIPE_CATEGORY.CATEGORY_ID }, Keys.CONSTRAINT_3, new TableField[] { Category.CATEGORY.ID }, true);
}
